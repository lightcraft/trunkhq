= simple_form_for([@location, @channel], :html => {:class => 'modal hide channel_form', :remote => true} ) do |f|
  .modal-header
    %button{ :type => "button", :class => "close",  :'data-dismiss' => "modal"} ×
    %h4.row
      .span2
        = "#{ f.object.new_record? ? 'New' : 'Edit'}"
        channel

      .span2
        = @channel.id ? "№ #{@channel.name}" : ''
        .hidden= f.association :location, :collection => current_user.locations.all.map { |l| [l.name, l.id] }, :label =>false, :include_blank => false
  .modal-body
    = f.error_notification
    = f.fields_for :sip do |sip_form|
      .row
        .span2= f.input :gsm_number, :type => "number", :placeholder => 'Phone number', :label => 'Phone number', :input_html => {  :class => 'input-small'}
        .span2= sip_form.input :secret, :placeholder => 'Password', :label => 'Password',  :input_html => {  :class => 'input-small'}
        -#.span2= f.association :chan_group, :include_blank => false #, ChanGroup.all.map { |c| [c.chan_group_name, c.id] }, :placeholder => 'Chanel Group ID', :label => 'Group ID'
        .span2
          %label Group ID
          = f.text_field(:chan_group_id, :type => "number", :pattern => "[0-9]+",  :size => "5", :maxlength => "4", :class => 'input-mini')
    .row
      .span2
        %label Date From
        = f.text_field :start_date,
          :placeholder => 'Start date',
          :title => 'Start date',
          :class => 'datepicker input-small',
          :value => @channel.start_date_str

      .span2
        %label Date To
        = f.text_field :stop_date,
          :placeholder => 'Stop date',
          :title => 'Stop date',
          :class => 'datepicker input-small',
          :value => @channel.stop_date_str
      .span2= f.input :imei, :type => "number", :placeholder => 'Imei', :label => 'Imei', :input_html => {  :class => 'input-small'}
    .row
      .span2= f.input :start_time
      .span2= f.input :stop_time
      .span2
        %label
          SipPhone
        .controls
          = f.fields_for :sip do |sip_form|
            = sip_form.check_box :context, {}, 'internal', 'external'
    - prefix_group_ids = @channel.chan_prefix_groups.map(&:prefix_group_id)
    .tabbable.tabs-below.operators
      .tab-content
        .row.head
          .span1 Enable
          .span1 Time interval
          .span1 Interval
          .span1 Count calls per interval
          .span1 min/day
          .span1 Max calls/day
        -#- @channel.chan_prefix_groups.each do |operator|
        = f.fields_for :chan_prefix_groups do |chan_form|
          - operator_enabled = prefix_group_ids.include?(chan_form.object.prefix_group_id)
          .tab-pane{id: dom_id(chan_form.object)+"#{chan_form.object.prefix_group_id}", :class => "#{'active' if @channel.chan_prefix_groups.index(chan_form.object).eql?(0)}"}
            = chan_form.hidden_field :prefix_group_id
            .row
              .span1{:style => 'margin-top: -7px'}
                = chan_form.check_box(:enabled)
                on
                %div
                  = chan_form.check_box(:strict)
                  strict
              .span1{:title => 'Calls per interval'}
                = chan_form.text_field(:calls_per_interval, :type => "number", :pattern => "[0-9]+", :size => "5", :maxlength => "4", :class => 'input-mini')
              .span1{:title => 'Calls min  per interval'}
                = chan_form.text_field(:call_min_interval, :type => "number", :pattern => "[0-9]+",  :size => "5", :maxlength => "4", :class => 'input-mini')
              .span1{:title => 'Interval mins'}
                = chan_form.text_field(:interval_mins, :type => "number", :pattern => "[0-9]+",  :size => "5", :maxlength => "4", :class => 'input-mini')
              .span1{:title => 'Max minutes per day'}
                = chan_form.text_field(:max_minutes_per_day, :type => "number", :pattern => "[0-9]+",  :size => "5", :maxlength => "4", :class => 'input-mini')
              .span1
                = chan_form.text_field(:max_calls_per_day, :type => "number", :pattern => "[0-9]+",  :size => "5", :maxlength => "4", :class => 'input-mini')

      %ul.nav.nav-tabs.operators
        - @channel.chan_prefix_groups.each do |operator|
          %li
            = link_to "##{dom_id(operator)}#{operator.prefix_group_id}", 'data-toggle' => 'tab' do
              = operator.name

  .modal-footer
    = link_to('Close', '#', :class => 'btn', :'data-dismiss' => 'modal')
    = f.button :submit, :class => 'btn btn-primary'
    - if f.object.persisted?
      = link_to('Destroy', [@channel.location, @channel],
        :class => 'btn btn-danger',
        :confirm => 'Are You sure? to destroy this channel?',
        :remote => true,
        :method => :delete)
